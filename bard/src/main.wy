data Map(
    foo: int32
)

trait Fooable(
    fooat() :: int32
)

make Map into Fooable {
    func fooat(self) :: int32 {
        return self.foo;
    }
}

make string into Fooable {
    func fooat(self) :: int32 {
        println("-=-=-=-=");
        println(self);
        println("-=-=-=-=");
        return 42;
    }
}

func main() {
    println("Hello, World!");
    mut p := @Point(24, 4);
    println(p.x);
    println(p.y);
    println(p.area());
    println(p.perimeter());
    a := "gabriel";
    println(arraylen(a));
    println(a.fooat());
    println(a.length());
    println("Above is length of string");
    map := @Map(42);
    println(map.fooat());
}

